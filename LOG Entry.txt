**2024-10-03
První actuall dvouhodinovka, vysvětlování
Pár začátečních textových souborů + start logu
Freelo start
Set up Githubu
**2024-10-10
Kontrolní body
Freelo Final Set Up
Písemná práce (Abstrakt, Poděkování a Klíčová slova, Úvod)
**2024-10-21
Hasher Script základní hashe (MD5 a SHA1, SHA256, SHA512)
Teoretická dokumentace (Použité programy)
**2024-10-22
Hasher Script všechny hashe (RIPEMD-160, MACTripleDES)
Unit Test kontrola hashování
**2024-10-24
Smazání knihovny přes NuGet
Změna Kontrolních bodů
Fixnutí hashů
Praktická i teoretická práce dokumentace
**2024-10-31
Gradual Hash metoda v Hasher
Unit Testy na Gradual Hash
Freelo úprava
CRC32 pro stejné výsledky (source: https://stackoverflow.com/questions/59183626/crc32-is-the-same-for-different-inputs) + Složka SameHashingResults
**2024-11-07
Dodělání GradualHash Unit Test
**2024-11-13
Formulář Hashování s algorithmy
GradualHashing fix
Hashování pomocí .txt
Output Settings (Listbox/MessageBox/TXTFile)
Settings Formulář, Settings skript, Confirmation Formulář
**2024-11-20
Main Formulář UI Update (ToolStripMenu)
Working Save/Load System (uloží při každé změně v MainForm ale jinde pouze přes dialog)
**2024-11-21
Dokumentace k Settings a UI
UnitTesty pro Settings
**2024-11-28
Hasher (a metody) is no longer static
Added menu for confirming rewriting saved salt in .txt
Added salt and pepper to Hasher to make it easier to work with them
Added Include Salt and Pepper Output style
**2024-12-05
TXTInput update code and add Salt/Pepper Logic
Salt and Pepper as Method
Gradual Hashing Salt and Pepper work
**2024-12-12
Gradual Hashing Salt and Pepper Done
TextFile output salt and Pepper
BUG FIX: Outputs gradual hashes as single hashes
Created OutputHandler.cs for handling all the outputs
Output Style and Option is fucked
**2024-12-13
BUG FIX: OutputStyle and OutputSettings fix (Settings is now Static)
BUG FIX: Gradual Hashing showing 1 less hash
BUG FIX: Salt and Pepper output problem
**2024-12-18
Better Handling of all hashing in all forms (ProcessingHash)
Multiple Hashing Form
**2024-12-19
HashCollisionGenerator
**2024-12-25
VisualMode moved to Toolstrip Menu
Settings new basePathToFiles
ToolStrip menu code in Form1 rearranged
**2025-01-02
Hashing Collision Generator:
        UI Update Problems Fixed
        Log to Listbox
        Threading Problem Fixed
        Using HEX and UTF-8
        TXT Output
        Performance Mode
        Memory List Dump Optimization
-----------------------------------
        Check Collision from User Input
        Check Collision from TXT Input
        Update TXT Output
        Found MD5 Collision
        General Fixes
**2025-01-08
Password BruteForce:
	Finding Password With rockyou.txt algorithm
	How Long to Crack Password Calculator
	Finished UI
	Pre-Hash Generator
**2025-01-11
Hashing Collision Generator:
	Removed the % chance of finding the hash
	Changed timer and UI to be in a seperate thread (timer is counting 1/2 of the real time)
	Separated the info and the saved collisions (added Settings.CollisionPathToFiles)
	Update the performance mode to use 100% of the CPU (pain)
	Added saving the hash with the text (+messageBox) in the collision save
**2025-01-12
Password Form:
	Brute force attack working
	Dictionary attack support hashed/unhashed txt files and check if they are all hashed
	Log added
	Seperated Dictionary Attack and Password BruteForce Attack
-----------------------------------
	Dictionary attack working
	Dictionary attack Log set up
	Dictionary attack can be cancelled
Hashing Collision Generator: Small update for better code debugging
Log entry for Password checker
**2025-01-14
Password Form:
	Password Form Single thread working
	BUG: Dictionary attack log fix (Removed ConcurrentQueue)
	Dictionary attack fully working
	Brute force Attack working
	Dictionary attack MultiThreading
**2025-01-15
Password Form:
	Brute force attack MultiThreading working (Different hashing algorithms use more/less CPU)
**2025-01-16
Unit Test work
**2025-01-19
Chaning ConcurrentQueue<string> To normal List and limiting the shit outputted in the log
Password How Long To Crack code update
Rename logs checkBoxes in PasswordForm to make sense
-----------------------------------
**2025-01-19,20,21,22,23,25
Work on written thesis
**2025-01-28
Version 0.7 HashTester Out
**2025-01-30
Unit Tests
Settings File Update
**2025-02-03
GitIgnore Update
Unit Tests (TXT INPUT)
TXT Input added methods for Unit Testing in Main Form
Some Unit Tests Shenanigans
**2025-02-04
Unit Test Fixing
**2025-02-05
Unit Test on Rainbow Table Generator
Rainbow Table Generator MultiThread
Rainbow Table Generator Better UI Management *doesnt currently work*
**2025-02-06
Rainbow Table Attack seperate class *works questionably*
Rainbow Table Generator Better UI Management *doesnt currently work*
**2025-02-07
RainbowTableAttack class fix
Password Check new Class (Finding passwords in a .txt file)